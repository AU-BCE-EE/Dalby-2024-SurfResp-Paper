dat <- read_excel('../output/table1.xlsx')
dat.loss <- dat %>% group_by(temp, gas) %>%
summarise(across(contains('mean'), function(.) ./.[day == 0] * 100),
day  = day) %>%
filter(day != 0)
dat.sd <- dat %>% pivot_longer(cols = 4:ncol(.), names_to = 'comp', values_to = 'value') %>%
summarise(values_sd = value[grepl('sd', comp)], values_mean = value[grepl('mean', comp)],
names = comp[grepl('sd', comp)], temp = temp[grepl('sd', comp)], gas = gas[grepl('sd', comp)],
day = day[grepl('sd', comp)])
dat.sd$names <- gsub('_sd','',dat.sd$names)
dat.rsd <- dat.sd %>% group_by(temp, gas, names) %>%
mutate(rsd = sqrt((values_sd/values_mean*100)^2 + (values_sd[day == 0]/values_mean[day == 0]*100)^2)) %>%
filter(day != 0) %>% mutate(abssd = rsd/100 * values_mean)
dat.rsd_wide <- dat.rsd %>% select(names, abssd, temp, gas, day) %>%
pivot_wider(names_from = names, values_from = abssd)
rm(list = ls())
library('ggplot2')
library('tidyr')
library('dplyr')
library(readxl)
library("gridExtra")
# fig_loss
dat <- read_excel('../output/table1.xlsx')
dat.loss <- dat %>% group_by(temp, gas) %>%
summarise(across(contains('mean'), function(.) ./.[day == 0] * 100),
day  = day) %>%
filter(day != 0)
dat.sd <- dat %>% pivot_longer(cols = 4:ncol(.), names_to = 'comp', values_to = 'value') %>%
summarise(values_sd = value[grepl('sd', comp)], values_mean = value[grepl('mean', comp)],
names = comp[grepl('sd', comp)], temp = temp[grepl('sd', comp)], gas = gas[grepl('sd', comp)],
day = day[grepl('sd', comp)])
dat.sd$names <- gsub('_sd','',dat.sd$names)
dat.rsd <- dat.sd %>% group_by(temp, gas, names) %>%
mutate(rsd = sqrt((values_sd/values_mean*100)^2 + (values_sd[day == 0]/values_mean[day == 0]*100)^2)) %>%
filter(day != 0) %>% mutate(abssd = rsd/100 * values_mean)
dat.rsd_wide <- dat.rsd %>% select(names, abssd, temp, gas, day) %>%
pivot_wider(names_from = names, values_from = abssd)
joined <- full_join(dat.loss, dat.rsd_wide, join_by('temp','gas','day'))
joined.long.mean <- joined %>% select(day, temp, gas, contains('mean')) %>%
pivot_longer(cols = contains('mean'), names_to = 'names', values_to = 'values_mean')
joined.long.mean$names <- gsub('_mean','',joined.long.mean$names)
joined.long.sd <- joined %>% select(day, temp, gas, !contains('mean')) %>%
pivot_longer(cols = -c(temp, day, gas), names_to = 'names', values_to = 'values_sd')
joined.long <- full_join(joined.long.mean, joined.long.sd, join_by('day', 'temp', 'gas','names'))
plot_dat <- joined.long %>% filter(names %in% c('vs','cel','hem','lig','CP','lip'))
plot_dat$names <- factor(plot_dat$names, levels = c('vs','cel','hem','lig','CP','lip'))
plot_dat$day <- round(plot_dat$day, 0)
plot_dat$day <- gsub('283','After storage',plot_dat$day)
plot_dat$day <- gsub('455','After AD',plot_dat$day)
plot_dat$day <- factor(plot_dat$day, levels = c('After storage', 'After AD'))
plot_dat$temp <- as.factor(plot_dat$temp)
new.lab <- as_labeller(c('vs' = 'VS', 'cel' = 'Cellulose', 'hem' = 'Hemicellulose', 'lig' = 'Lignin', 'CP' = 'CP', 'lip' = 'Lipids',
'air' = 'Air', 'n2' = 'N[2]'), label_parsed)
p_loss <- ggplot(plot_dat, aes(x = as.numeric(day), y = values_mean, col = temp, shape = gas)) +
geom_point(position = position_dodge(width = 0.2), size = 3) + geom_line(position = position_dodge(width = 0.2))  +
geom_linerange(aes(y = values_mean, ymin = values_mean - values_sd, ymax = values_mean + values_sd), position = position_dodge(width = 0.2)) +
labs(y = 'Remaining mass, %', x = "", col = 'Temp, \u00B0 C', shape = 'Headspace gas', tag = 'a') + theme_bw() +
theme(axis.text.x = element_text(angle = 60,  hjust = 1, vjust = 1)) + facet_grid(~names, labeller = new.lab) +
scale_color_manual(values = c("blue", "red")) + scale_shape_manual(values = c(1, 2), labels = c("Air", expression('N'[2]))) +
scale_x_continuous(limits = c(0.5, 2.5), breaks = c(1, 2), labels = c("After storage", 'After AD')) +
geom_hline(yintercept = 100, color = 'gray', lty = 'dashed')
#png('../figures/fig_loss.png', height = 4, width =7, units = 'in', res = 600)
#grid::grid.draw(p_loss)
#dev.off()
dat.org <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "vfa"))
temp <- c(rep('start', 3), rep(c(10, 20, 10, 20), each = 4, times = 2))
gas <- c(rep('start', 3), rep(c('n2', 'air'), each = 8, times = 2))
dat.org$temp <- temp
dat.org$gas <- gas
dat.org$days
dat.plot <- dat.org %>% select(-sum, -...11, -reactor) %>%
pivot_longer(cols = c(1:8), names_to = 'vfa', values_to = 'value') %>% group_by(temp, gas, vfa, days) %>%
summarise(mean = mean(value)/1000, sd = sd(value)/1000)
start.dat <- do.call(rbind, replicate(8, dat.plot[dat.plot$temp == 'start',], simplify = F))
start.dat$temp <- c(rep(10, 16), rep(20, 16), rep(10, 16), rep(20, 16))
start.dat$gas <- c(rep(c('air','n2'), each = 8, times = 2), rep(c('air','n2'), each = 8, times = 2))
dat.plot.mod <- dat.plot[!grepl('start', dat.plot$gas),]
dat.plot.mod$temp <- as.numeric(dat.plot.mod$temp)
dat.plot.all <- rbind(dat.plot.mod, start.dat)
new.lab = as_labeller(c("10"= "10~degree~C", "n2"= "N[2]", "20"= "20~degree~C", "air"= "Air", 'vs' = 'VS', 'cel' = 'Cellulose', 'hem' = 'Hemicellulose', 'lig' = 'Lignin', 'CP' = 'CP', 'lip' = 'Lipids'
), label_parsed)
dat.plot.all$days <- as.factor(dat.plot.all$days )
dat.plot.all$days <- recode(dat.plot.all$days, '0' = "Start", '283' = 'After storage', '455' = 'After AD')
dat.plot.all$vfa <- factor(dat.plot.all$vfa, levels = c('acetic' = 'acetic', 'propanoic'= 'propanoic',
'butanoic' = 'butanoic', 'iso.butanoic' = 'iso.butanoic',
'meth.butanoic'='meth.butyric', 'pentanoic' = 'pentanoic',
'hexanoic' = 'hexanoic','iso.caproic' = 'iso.caproic'))
p_vfa <-
ggplot(dat.plot.all, aes(vfa, mean, fill = days)) +
geom_bar(stat = 'identity', position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(width = 0.8), width = 0.2) +
facet_grid(temp~gas, labeller = new.lab) + theme_bw() +
labs(y = expression('VFA (g kg'^{-1}*')'), x = '', fill = '', tag = 'b') +
theme(axis.text.x = element_text(angle = 60, vjust = 1.0, hjust = 1))
comb <- grid.arrange(p_loss, p_vfa, nrow = 2)
png('../figures/fig_loss_vfa.png',  width = 7, height = 8, units = 'in', res = 600)
grid::grid.draw(comb)
dev.off()
# surface respiration estimate
rm(list = ls())
library("readxl")
library('ggplot2')
library('tidyr')
library('dplyr')
library('gridExtra')
library('lubridate')
#prep
dat_gas <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "all"))
dat.info <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "info"))
dat.info.f <- dat.info %>% select(c('reactor', 'temp','gas','datetime','day', 'wet_weight', 'dm','vs','lig','cel','hem','lip','tan','tn','vfa','pH')) %>%
mutate(dm = dm * 10, vs = vs * dm)
mass <- dat.info.f$wet_weight[dat.info.f$day == 0]/1000 # kg
mass <- mass[!is.na(mass)]
vs_mass <- dat.info.f$vs[dat.info.f$day == 0 & dat.info.f$gas != 'none']/1000
vs_mass <- vs_mass[!is.na(vs_mass)]
# kg
dat_gas <- dat_gas[dat_gas$reactor != 'bg',]
dat_gas$mass <- mass
dat_gas$vs_mass <- vs_mass
f_CH4 <- 1/1000000 * dat_gas$cor_flow/(0.082057 * 293) * 60 * 24 * 16  / dat_gas$vs_mass # mg pr. kg slurry pr day
f_CO2 <- 1/1000000 * dat_gas$cor_flow/(0.082057 * 293) * 60 * 24 * 44  / dat_gas$vs_mass # mg pr. kg slurry pr day
CO2_bg <- 430
CH4_bg <- 2
surf_area <- (9.5/2)^2 * pi / 10000# m^2
ifelse(dat_gas$gas == "air", dat_gas$CO2_emis <- (as.numeric(dat_gas$co2) - CO2_bg) * f_CO2, dat_gas$CO2_emis <- dat_gas$co2 * f_CO2)
ifelse(dat_gas$gas == "air", dat_gas$CH4_emis <- (as.numeric(dat_gas$ch4) - CH4_bg) * f_CH4, dat_gas$CH4_emis <- dat_gas$ch4 * f_CH4)
surf_conv <- mean(mass/surf_area) # convert mg / kg slurry / day to mg / m2 / day
dat.mod <- dat_gas %>% group_by(temp, gas, day, date) %>%
mutate(ratio = (CH4_emis * 12.01/16.04)/(CH4_emis * 12.01/16.04 + CO2_emis * 12.01/44.01)) %>% mutate(CH4_emis_C = CH4_emis * 12/16, CO2_emis_C = CO2_emis * 12/44) %>%
group_by(temp, gas, day, date) %>% summarise(across(c('CO2_emis_C','CH4_emis_C', 'CO2_emis','CH4_emis', 'ratio'), .fns = list(mean = mean, sd = sd), na.rm = TRUE))
dat.mod$CO2_surf_emis_mean <- 0
dat.mod$CO2_surf_emis_mean[dat.mod$temp == 10 & dat.mod$gas == 'air'] <- dat.mod$CO2_emis_mean[dat.mod$temp == 10 & dat.mod$gas == 'air'] - dat.mod$CO2_emis_mean[dat.mod$temp == 10 & dat.mod$gas == 'n2']
dat.mod$CO2_surf_emis_mean[dat.mod$temp == 20 & dat.mod$gas == 'air'] <- dat.mod$CO2_emis_mean[dat.mod$temp == 20 & dat.mod$gas == 'air'] - dat.mod$CO2_emis_mean[dat.mod$temp == 20 & dat.mod$gas == 'n2']
dat.mod$CO2_surf_emis_sd <- 0
dat.mod$CO2_surf_emis_sd[dat.mod$temp == 10 & dat.mod$gas == 'air'] <- sqrt((dat.mod$CO2_emis_sd[dat.mod$temp == 10 & dat.mod$gas == 'air'])^2 - (dat.mod$CO2_emis_sd[dat.mod$temp == 10 & dat.mod$gas == 'n2'])^2)
dat.mod$CO2_surf_emis_sd[dat.mod$temp == 20 & dat.mod$gas == 'air'] <- sqrt((dat.mod$CO2_emis_sd[dat.mod$temp == 20 & dat.mod$gas == 'air'])^2 + (dat.mod$CO2_emis_sd[dat.mod$temp == 20 & dat.mod$gas == 'n2'])^2)
dat.mod$CO2_surf_emis_mean <- dat.mod$CO2_surf_emis_mean /1000 * surf_conv
dat.mod$CO2_surf_emis_sd <- dat.mod$CO2_surf_emis_sd /1000 * surf_conv
# CO2_surf_emis has units of gCO2/m2
dat.mod.long <- dat.mod %>% pivot_longer(cols = c('CH4_emis_C_mean', 'CO2_emis_C_mean', 'CH4_emis_C_sd', 'CO2_emis_C_sd'), names_to = 'comp', values_to = 'value')
dat.mod.mean <- dat.mod.long[grepl('mean$', dat.mod.long$comp),]
dat.mod.sd <- dat.mod.long[grepl('sd$', dat.mod.long$comp),]
dat.mod.both <- cbind(dat.mod.mean, sd = dat.mod.sd$value)
dat.mod.both$temp <- as.factor(dat.mod.both$temp)
# plot emission rates
new.lab <- as_labeller(c(air = "Air", n2 = "N[2]", CH4_emis_C_mean = "CH[4]", CO2_emis_C_mean = "CO[2]"), label_parsed)
fig_emis <- ggplot(dat.mod.both, aes(x = day, y = value, col = temp)) +
geom_point() + geom_line() +
geom_errorbar(aes(ymin = value - sd, ymax = value + sd)) +
facet_grid(comp~gas, labeller = new.lab, scales = "free_y") +
theme_bw() +
theme() +
theme(legend.position = 'top', axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y = element_text(size = 10)) +
labs(y = expression('Emission rate (g C kg'^{-1}~VS~'d'^{-1}*')'),
x = "", col = expression('Temp (\u00b0C)'), tag = 'a') +
scale_color_manual(values = c('blue', 'red'))
# plot ratios
dat.mod.long <- dat.mod %>% pivot_longer(cols = c('ratio_mean', 'ratio_sd'), names_to = 'comp', values_to = 'value')
dat.mod.mean <- dat.mod.long[grepl('mean$', dat.mod.long$comp),]
dat.mod.sd <- dat.mod.long[grepl('sd$', dat.mod.long$comp),]
dat.mod.both <- cbind(dat.mod.mean, sd = dat.mod.sd$value)
dat.mod.both$temp <- as.factor(dat.mod.both$temp)
new.lab <- as_labeller(c(air = "Air", n2 = "N[2]", ratio_mean = "C[CH4]/(C[CH4]+C[CO2])"), label_parsed)
fig_ratio <- ggplot(dat.mod.both, aes(x = day, y = value, col = temp)) +
geom_point() + geom_line() +
geom_errorbar(aes(ymin = value - sd, ymax = value + sd)) +
facet_grid(comp~gas, labeller = new.lab, scales = "free_y") +
scale_x_continuous(breaks = seq(0, 250, by = 50)) +
theme_bw() +
theme(axis.title.y = element_text(size = 10)) +
theme(legend.position = 'none') +
labs(y = expression('Molar fraction'), x = "Time (d)", col = expression('Temp (\u00b0C)'))+
scale_color_manual(values = c('blue', 'red'))
## BIOGAS part
rho_CH4 <- 0.665 # at 22 deg C, kg/m3
rho_CO2 <- 1.802
dat_biogas <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "info"))
weights_scale <- dat_biogas %>% select(wet_weight, day, reactor) %>% filter(day >= 283, day< 283.1) %>%
mutate(weights_scale = wet_weight)
nrow(dat_biogas)
vs_mass <- dat_biogas %>% filter(day == 283) %>% mutate(vs_mass_load = dm/100 * vs * bio_wet_weight/1000) %>% select(vs_mass_load)
dat_biogas$vs_mass_load <- NULL
rep_vs <- c(0,0,0, c(rep(t(vs_mass), length.out = nrow(dat_biogas)-3)))
dat_biogas$vs_mass_load <- rep_vs
dat.s <- dat_biogas %>%
select(day, datetime, bio_wet_weight, mass_vented, vol_vented, vs_mass_load, mass_leaked, x_CH4, reactor, temp, gas) %>%
filter(day > 0) %>% mutate_all(~ ifelse(is.na(.), 0, .), ~ ifelse(.<0, 0, .)) %>%
mutate(mass_leaked = ifelse(mass_leaked < 0, 0, mass_leaked), x_CH4 = ifelse(x_CH4 < 0, 0, ifelse(x_CH4 > 1, 1, x_CH4))) %>% # correct impossible mol fractions and negative leakage
mutate(vol_leak = vol_vented/mass_vented * mass_leaked, vol_vent_leak = vol_leak + vol_vented,
vol_ch4 = vol_vent_leak * x_CH4, vol_co2 = vol_vent_leak * (1 - x_CH4)) %>%
mutate_all(~ ifelse(is.na(.), 0, .), ~ ifelse(.<0, 0, .)) %>%
mutate(weights_scale = rep(weights_scale$weights_scale, length = nrow(dat_biogas[dat_biogas$day >= 283,]))) %>%
group_by(reactor) %>%  mutate(diff = diff(c(283, day))) %>%
mutate(CH4_rate = (vol_ch4)/vs_mass_load * rho_CH4/1000/diff,
CO2_rate = (vol_co2)/vs_mass_load * rho_CO2/1000/diff,
cum_CH4 = cumsum(vol_ch4)/bio_wet_weight * weights_scale * rho_CH4/1000,
cum_CH4_vs = cumsum(vol_ch4)/vs_mass_load * rho_CH4/1000,
cum_CO2 = cumsum(vol_co2)/bio_wet_weight * weights_scale * rho_CO2/1000,
cum_CO2_vs = cumsum(vol_co2)/vs_mass_load * rho_CO2/1000) %>%
group_by(temp, gas, datetime) %>%
summarize(across(c(CH4_rate, CO2_rate, cum_CH4, cum_CO2, cum_CH4_vs, cum_CO2_vs), .fns = list(mean = mean, sd = sd))) %>%
filter(gas != 0, datetime != 0) %>%
mutate(datetime = as_datetime(datetime),
time_diff = datetime - min(datetime),
days = as.numeric(time_diff, unit = "days")) %>%
mutate(across(contains('CH4'), function(x) x*12/16), across(contains('CO2'), function(x) x * 12/44))#,
#plot cumulative emission
dat.s$comp <- 'CH4'
new.lab = as_labeller(c(air = 'Air', n2 = 'N[2]', CH4 = 'CH[4]'), label_parsed)
fig_biogas <- ggplot(dat.s, aes(x = days, y = CH4_rate_mean, col = temp)) + geom_line() + geom_point() +
geom_errorbar(aes(ymin = CH4_rate_mean - CH4_rate_sd, ymax = CH4_rate_mean + CH4_rate_sd, x = days)) +
facet_grid(comp~gas, labeller = new.lab) +
labs(y = expression('Emission rate (g C kg'^{-1}~VS~'d'^{-1}*')'), x = 'Time (d)', col  = expression('Temp (\u00b0C)'), tag = 'b') +
lims(y = c(0,5)) +
theme_bw() + theme(legend.position = '', axis.title.y = element_text(size = 10)) + scale_color_manual(values = c("blue", "red"))
fig_biogas
png('../figures/fig_emis_ratio_bio.png',  width = 18/2.54, height = 20/2.54, units = 'in', res = 600)
grid::grid.draw(rbind(ggplotGrob(fig_emis), ggplotGrob(fig_ratio), ggplotGrob(fig_biogas)))
dev.off()
mean_ratios <- dat.mod.both %>% group_by(temp, gas) %>% summarise(mean_ratio = mean(value))
fig_biogas <- ggplot(dat.s, aes(x = days, y = CH4_rate_mean, col = temp)) + geom_line() + geom_point() +
geom_errorbar(aes(ymin = CH4_rate_mean - CH4_rate_sd, ymax = CH4_rate_mean + CH4_rate_sd, x = days)) +
facet_grid(comp~gas, labeller = new.lab) +
labs(y = expression('Emission rate (g C kg'^{-1}~VS~'d'^{-1}*')'), x = 'Time (d)', col  = expression('Temp (\u00b0C)'), tag = 'b') +
lims(y = c(0,5)) + coord_cartesian(ylim(0,5)) +
theme_bw() + theme(legend.position = '', axis.title.y = element_text(size = 10)) + scale_color_manual(values = c("blue", "red"))
fig_biogas
fig_biogas <- ggplot(dat.s, aes(x = days, y = CH4_rate_mean, col = temp)) + geom_line() + geom_point() +
geom_errorbar(aes(ymin = CH4_rate_mean - CH4_rate_sd, ymax = CH4_rate_mean + CH4_rate_sd, x = days)) +
facet_grid(comp~gas, labeller = new.lab) +
labs(y = expression('Emission rate (g C kg'^{-1}~VS~'d'^{-1}*')'), x = 'Time (d)', col  = expression('Temp (\u00b0C)'), tag = 'b') +
lims(y = c(0,5)) + coord_cartesian(ylim = c(0,5)) +
theme_bw() + theme(legend.position = '', axis.title.y = element_text(size = 10)) + scale_color_manual(values = c("blue", "red"))
fig_biogas
fig_biogas <- ggplot(dat.s, aes(x = days, y = CH4_rate_mean, col = temp)) + geom_line() + geom_point() +
geom_errorbar(aes(ymin = CH4_rate_mean - CH4_rate_sd, ymax = CH4_rate_mean + CH4_rate_sd, x = days)) +
facet_grid(comp~gas, labeller = new.lab) +
labs(y = expression('Emission rate (g C kg'^{-1}~VS~'d'^{-1}*')'), x = 'Time (d)', col  = expression('Temp (\u00b0C)'), tag = 'b') +
coord_cartesian(ylim = c(0,5)) +
theme_bw() + theme(legend.position = '', axis.title.y = element_text(size = 10)) + scale_color_manual(values = c("blue", "red"))
fig_biogas
png('../figures/fig_emis_ratio_bio.png',  width = 18/2.54, height = 20/2.54, units = 'in', res = 600)
grid::grid.draw(rbind(ggplotGrob(fig_emis), ggplotGrob(fig_ratio), ggplotGrob(fig_biogas)))
dev.off()
#cumulative emission
rm(list = ls())
library("readxl")
library('ggplot2')
library('tidyr')
library('dplyr')
library('broom')
#prep
dat.inf <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "info"))
dat.inf.f <- dat.inf %>% select(c('reactor', 'temp','gas','datetime','day', 'wet_weight', 'dm','vs')) %>%
mutate(dm = dm * 10, vs = vs * dm)
dat.org <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "all"))
mass <- dat.inf.f$wet_weight[dat.inf.f$day == 0]/1000 # kg
mass <- mass[!is.na(mass)]
dat.org <- dat.org[dat.org$reactor != 'bg',]
dat.org$mass <- mass
f_CH4 <- 1/1000000 * dat.org$cor_flow/(0.082057 * 293) * 60 * 24 * 16.04 *1000  # mg pr day
f_CO2 <- 1/1000000 * dat.org$cor_flow/(0.082057 * 293) * 60 * 24 * 44.01 *1000  # mg pr day
CO2_bg <- 430
CH4_bg <- 2
ifelse(dat.org$gas == "air", dat.org$CO2_emis <- (as.numeric(dat.org$co2) - CO2_bg) * f_CO2, dat.org$CO2_emis <- dat.org$co2 * f_CO2)
ifelse(dat.org$gas == "air", dat.org$CH4_emis <- (as.numeric(dat.org$ch4) - CH4_bg) * f_CH4, dat.org$CH4_emis <- dat.org$ch4 * f_CH4)
day_spaced <- seq(from = min(dat.org$date), to = max(dat.org$date),
length.out = max(dat.org$date) - min(dat.org$date) +1)
dat.l <- dat.org %>% group_by(temp) %>% mutate(CH4_emis_C = CH4_emis * 12/16.04, CO2_emis_C = CO2_emis * 12/44.01) %>%
pivot_longer(cols = c('CH4_emis_C', 'CO2_emis_C'),
names_to = 'comp', values_to = 'value')
#add surface respiration rates g day m2
emis.cum.storage <- dat.l %>% group_by(reactor, comp, temp, gas) %>%
mutate(cum = sum(approx(x = date, y = value, xout = day_spaced)$y)) %>%
distinct(cum, keep_all = TRUE) %>%
mutate(cum = cum/1000) %>%
group_by(temp, gas, comp) %>%
summarise(across(cum, .fns = list(mean = mean, sd = sd)))
end.storage <- max(dat.l$day)
emis.stat.storage <- dat.l %>% group_by(reactor, comp, temp, gas) %>%
mutate(cum = sum(approx(x = date, y = value, xout = day_spaced)$y)) %>%
mutate(cum = cum/1000) %>%
summarise(cum = cum[day == end.storage]) %>%
group_by(comp) %>%
do({
fit <- aov(cum ~ gas * temp, data = .)
posthoc <- TukeyHSD(fit)
bind_rows(tidy(fit), tidy(posthoc))
})
## biogas
rho_CH4 <- 0.665 # at 22 deg C, kg/m3
rho_CO2 <- 1.802
dat.info <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "info"))
weights_scale <- dat.info %>% select(wet_weight, day, reactor) %>% filter(day >= 283, day< 283.1) %>%
mutate(weights_scale = wet_weight)
end <- max(dat.info$day)
emis.stat.biogas <- dat.info %>%
select(day, datetime, bio_wet_weight, mass_vented, vol_vented, mass_leaked, x_CH4, reactor, temp, gas) %>%
filter(day > 0) %>% mutate_all(~ ifelse(is.na(.), 0, .), ~ ifelse(.<0, 0, .)) %>%
mutate(mass_leaked = ifelse(mass_leaked < 0, 0, mass_leaked), x_CH4 = ifelse(x_CH4 < 0, 0, ifelse(x_CH4 > 1, 1, x_CH4))) %>% # correct impossible mol fractions and negative leakage
mutate(vol_leak = vol_vented/mass_vented * mass_leaked, vol_vent_leak = vol_leak + vol_vented,
vol_ch4 = vol_vent_leak * x_CH4, vol_co2 = vol_vent_leak * (1 - x_CH4)) %>%
mutate_all(~ ifelse(is.na(.), 0, .), ~ ifelse(.<0, 0, .)) %>%
mutate(weights_scale = rep(weights_scale$weights_scale, length = nrow(dat.info[dat.info$day >= 283,]))) %>%
group_by(reactor) %>%
mutate(cum_CH4 = cumsum(vol_ch4)/bio_wet_weight * weights_scale * rho_CH4/1000 * 12/16.04,
cum_CO2 = cumsum(vol_co2)/bio_wet_weight * weights_scale * rho_CO2/1000 * 12/44.01) %>%
pivot_longer(c('cum_CH4', 'cum_CO2'), names_to = "comp", values_to = "cum") %>%
group_by(reactor, temp, gas, comp) %>% summarise(cum = cum[day == end]) %>%
group_by(comp) %>%
do({
fit <- aov(cum ~ gas * temp, data = .)
posthoc <- TukeyHSD(fit)
bind_rows(tidy(fit), tidy(posthoc))
})
## combined
emis.cum.storage <- dat.l %>% group_by(reactor, comp, temp, gas) %>%
mutate(cum = sum(approx(x = date, y = value, xout = day_spaced)$y)) %>%
distinct(cum, keep_all = TRUE) %>%
mutate(cum = cum/1000, experiment = "storage") %>% select(-keep_all)
emis.cum.biogas <- dat.info %>%
select(day, datetime, bio_wet_weight, mass_vented, vol_vented, mass_leaked, x_CH4, reactor, temp, gas) %>%
filter(day > 0) %>% mutate_all(~ ifelse(is.na(.), 0, .), ~ ifelse(.<0, 0, .)) %>%
mutate(mass_leaked = ifelse(mass_leaked < 0, 0, mass_leaked), x_CH4 = ifelse(x_CH4 < 0, 0, ifelse(x_CH4 > 1, 1, x_CH4))) %>% # correct impossible mol fractions and negative leakage
mutate(vol_leak = vol_vented/mass_vented * mass_leaked, vol_vent_leak = vol_leak + vol_vented,
vol_ch4 = vol_vent_leak * x_CH4, vol_co2 = vol_vent_leak * (1 - x_CH4)) %>%
mutate_all(~ ifelse(is.na(.), 0, .), ~ ifelse(.<0, 0, .)) %>%
mutate(weights_scale = rep(weights_scale$weights_scale, length = nrow(dat.info[dat.info$day >= 283,]))) %>%
group_by(reactor) %>%
mutate(CH4_emis_C = cumsum(vol_ch4)/bio_wet_weight * weights_scale * rho_CH4/1000 * 12/16,
CO2_emis_C = cumsum(vol_co2)/bio_wet_weight * weights_scale * rho_CO2/1000 * 12/44) %>%
pivot_longer(c('CH4_emis_C', 'CO2_emis_C'), names_to = "comp", values_to = "cum") %>%
mutate(experiment = "biogas") %>%
filter(day == end) %>% select(colnames(emis.cum.storage)) %>% mutate(temp = as.numeric(temp))
emis.cum.combined <- bind_rows(emis.cum.storage, emis.cum.biogas) %>%
group_by(reactor, temp, gas, comp) %>% summarise(cum = sum(cum)) %>%
mutate(experiment = "combined")
emis.stat.combined <- emis.cum.combined %>%
group_by(comp) %>%
do({
fit <- aov(cum ~ gas * temp, data = .)
posthoc <- TukeyHSD(fit)
bind_rows(tidy(fit), tidy(posthoc))
})
View(emis.stat.combined)
View(emis.cum.combined)
View(emis.cum.storage)
#cumulative emission
rm(list = ls())
library("readxl")
library('ggplot2')
library('tidyr')
library('dplyr')
library('broom')
#prep
dat.inf <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "info"))
dat.inf.f <- dat.inf %>% select(c('reactor', 'temp','gas','datetime','day', 'wet_weight', 'dm','vs')) %>%
mutate(dm = dm * 10, vs = vs * dm)
dat.org <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "all"))
mass <- dat.inf.f$wet_weight[dat.inf.f$day == 0]/1000 # kg
mass <- mass[!is.na(mass)]
dat.org <- dat.org[dat.org$reactor != 'bg',]
dat.org$mass <- mass
f_CH4 <- 1/1000000 * dat.org$cor_flow/(0.082057 * 293) * 60 * 24 * 16.04 *1000  # mg pr day
f_CO2 <- 1/1000000 * dat.org$cor_flow/(0.082057 * 293) * 60 * 24 * 44.01 *1000  # mg pr day
CO2_bg <- 430
CH4_bg <- 2
ifelse(dat.org$gas == "air", dat.org$CO2_emis <- (as.numeric(dat.org$co2) - CO2_bg) * f_CO2, dat.org$CO2_emis <- dat.org$co2 * f_CO2)
ifelse(dat.org$gas == "air", dat.org$CH4_emis <- (as.numeric(dat.org$ch4) - CH4_bg) * f_CH4, dat.org$CH4_emis <- dat.org$ch4 * f_CH4)
day_spaced <- seq(from = min(dat.org$date), to = max(dat.org$date),
length.out = max(dat.org$date) - min(dat.org$date) +1)
dat.l <- dat.org %>% group_by(temp) %>% mutate(CH4_emis_C = CH4_emis * 12/16.04, CO2_emis_C = CO2_emis * 12/44.01) %>%
pivot_longer(cols = c('CH4_emis_C', 'CO2_emis_C'),
names_to = 'comp', values_to = 'value')
#add surface respiration rates g day m2
emis.cum.storage <- dat.l %>% group_by(reactor, comp, temp, gas) %>%
mutate(cum = sum(approx(x = date, y = value, xout = day_spaced)$y)) %>%
distinct(cum, keep_all = TRUE) %>%
mutate(cum = cum/1000) %>%
group_by(temp, gas, comp) %>%
summarise(across(cum, .fns = list(mean = mean, sd = sd)))
end.storage <- max(dat.l$day)
emis.stat.storage <- dat.l %>% group_by(reactor, comp, temp, gas) %>%
mutate(cum = sum(approx(x = date, y = value, xout = day_spaced)$y)) %>%
mutate(cum = cum/1000) %>%
summarise(cum = cum[day == end.storage]) %>%
group_by(comp) %>%
do({
fit <- aov(cum ~ gas * temp, data = .)
posthoc <- TukeyHSD(fit)
bind_rows(tidy(fit), tidy(posthoc))
})
## biogas
rho_CH4 <- 0.665 # at 22 deg C, kg/m3
rho_CO2 <- 1.802
dat.info <- data.frame(read_excel("../data/dat_resp.xlsx", sheet = "info"))
weights_scale <- dat.info %>% select(wet_weight, day, reactor) %>% filter(day >= 283, day< 283.1) %>%
mutate(weights_scale = wet_weight)
end <- max(dat.info$day)
emis.stat.biogas <- dat.info %>%
select(day, datetime, bio_wet_weight, mass_vented, vol_vented, mass_leaked, x_CH4, reactor, temp, gas) %>%
filter(day > 0) %>% mutate_all(~ ifelse(is.na(.), 0, .), ~ ifelse(.<0, 0, .)) %>%
mutate(mass_leaked = ifelse(mass_leaked < 0, 0, mass_leaked), x_CH4 = ifelse(x_CH4 < 0, 0, ifelse(x_CH4 > 1, 1, x_CH4))) %>% # correct impossible mol fractions and negative leakage
mutate(vol_leak = vol_vented/mass_vented * mass_leaked, vol_vent_leak = vol_leak + vol_vented,
vol_ch4 = vol_vent_leak * x_CH4, vol_co2 = vol_vent_leak * (1 - x_CH4)) %>%
mutate_all(~ ifelse(is.na(.), 0, .), ~ ifelse(.<0, 0, .)) %>%
mutate(weights_scale = rep(weights_scale$weights_scale, length = nrow(dat.info[dat.info$day >= 283,]))) %>%
group_by(reactor) %>%
mutate(cum_CH4 = cumsum(vol_ch4)/bio_wet_weight * weights_scale * rho_CH4/1000 * 12/16.04,
cum_CO2 = cumsum(vol_co2)/bio_wet_weight * weights_scale * rho_CO2/1000 * 12/44.01) %>%
pivot_longer(c('cum_CH4', 'cum_CO2'), names_to = "comp", values_to = "cum") %>%
group_by(reactor, temp, gas, comp) %>% summarise(cum = cum[day == end]) %>%
group_by(comp) %>%
do({
fit <- aov(cum ~ gas * temp, data = .)
posthoc <- TukeyHSD(fit)
bind_rows(tidy(fit), tidy(posthoc))
})
## combined
emis.cum.storage <- dat.l %>% group_by(reactor, comp, temp, gas) %>%
mutate(cum = sum(approx(x = date, y = value, xout = day_spaced)$y)) %>%
distinct(cum, keep_all = TRUE) %>%
mutate(cum = cum/1000, experiment = "storage") %>% select(-keep_all)
emis.cum.biogas <- dat.info %>%
select(day, datetime, bio_wet_weight, mass_vented, vol_vented, mass_leaked, x_CH4, reactor, temp, gas) %>%
filter(day > 0) %>% mutate_all(~ ifelse(is.na(.), 0, .), ~ ifelse(.<0, 0, .)) %>%
mutate(mass_leaked = ifelse(mass_leaked < 0, 0, mass_leaked), x_CH4 = ifelse(x_CH4 < 0, 0, ifelse(x_CH4 > 1, 1, x_CH4))) %>% # correct impossible mol fractions and negative leakage
mutate(vol_leak = vol_vented/mass_vented * mass_leaked, vol_vent_leak = vol_leak + vol_vented,
vol_ch4 = vol_vent_leak * x_CH4, vol_co2 = vol_vent_leak * (1 - x_CH4)) %>%
mutate_all(~ ifelse(is.na(.), 0, .), ~ ifelse(.<0, 0, .)) %>%
mutate(weights_scale = rep(weights_scale$weights_scale, length = nrow(dat.info[dat.info$day >= 283,]))) %>%
group_by(reactor) %>%
mutate(CH4_emis_C = cumsum(vol_ch4)/bio_wet_weight * weights_scale * rho_CH4/1000 * 12/16,
CO2_emis_C = cumsum(vol_co2)/bio_wet_weight * weights_scale * rho_CO2/1000 * 12/44) %>%
pivot_longer(c('CH4_emis_C', 'CO2_emis_C'), names_to = "comp", values_to = "cum") %>%
mutate(experiment = "biogas") %>%
filter(day == end) %>% select(colnames(emis.cum.storage)) %>% mutate(temp = as.numeric(temp))
emis.cum.combined <- bind_rows(emis.cum.storage, emis.cum.biogas) %>%
group_by(reactor, temp, gas, comp) %>% summarise(cum = sum(cum)) %>%
mutate(experiment = "combined")
emis.stat.combined <- emis.cum.combined %>%
group_by(comp) %>%
do({
fit <- aov(cum ~ gas * temp, data = .)
posthoc <- TukeyHSD(fit)
bind_rows(tidy(fit), tidy(posthoc))
})
write.csv(rbind(emis.cum.storage, emis.cum.biogas, emis.cum.combined), "../output/emis_cum_dat.csv", row.names = F)
write.csv(rbind(emis.stat.storage, emis.stat.biogas, emis.stat.combined), "../output/emis_cum_stat.csv", row.names = F)
table2.storage <- emis.cum.storage %>% group_by(temp, gas, comp) %>% summarise(across(cum, .fns = list(mean = mean, std = sd)))
View(table2.storage)
table2.biogas <- emis.cum.biogas %>% group_by(temp, gas, comp) %>% summarise(across(cum, .fns = list(mean = mean, std = sd)))
View(table2.biogas)
table2.combined <- emis.cum.combined %>% group_by(temp, gas, comp) %>% summarise(across(cum, .fns = list(mean = mean, std = sd)))
View(table2.combined)
write.csv(rbind(table2.storage, table2.biogas, table2.combined), '../output/table2.csv', row.names = F)
View(emis.stat.storage)
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/AU-BCE-EE/Dalby-2024-SurfResp-Paper/scripts")
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
library(marelac)
library(ReacTran)
library(readxl)
library(viridis)
source('pde_fun.R')
dat <- read_excel('../data/O2_profiles_corr.xlsx')
optim_pars <- read.csv('../output/optim_pars.csv')
pars <- cbind(optim_pars, D = 2.2 * 10^-5, kH = 0.0013/1000*10^6)
input_dat <- dat %>% mutate(id = as.factor(id)) %>% filter(exclude == 0, depth < 1000)
plot_dat <- data.frame()
for(i in unique(input_dat$id)){
parms <- pars[pars$id == i,]
dat <- input_dat[input_dat$id == i,] %>% select(-manure, -exclude, -mV) %>% filter(umol > 0) %>%
mutate(r = parms$r, KO2 = parms$KO2, type = "data", flux = pars$D[pars$id == i] * max(abs(diff(umol/1000))/abs(diff(depth/10000))))
x <- max(dat$depth)
model1 <- cbind(pde_fun(parms = parms, x = x), id = i, type = "model", man_name = dat$man_name[1], time = dat$time[1], r = parms$r[1], KO2 = parms$KO2[1]) %>%
rename('umol' = 'O2')
plot_dat <- rbind(plot_dat, model1, dat)
}
View(plot_dat)
View(plot_dat)
plot_dat <- plot_dat[!grepl('Cattle', plot_dat$man_name),]
fig_profiles <- ggplot(plot_dat, aes(umol, y = depth, group = id, col = time)) +
geom_path(data = subset(plot_dat, type == "data")) +  # Add points for "data" category
scale_y_continuous(trans = "reverse") +
scale_x_continuous(position = "top") +
labs(y = "Depth (µm)", x = expression("Oxygen concentration (µmol"~L^{-1}*")"),
col = "Time since mixing (d)") +
facet_wrap(~man_name) +
scale_color_viridis(option = "D")  +
theme_bw()
grid::grid.draw(fig_profiles)
png('../figures/fig_profiles.png',  width = 18/2.54, height = 18/2.54, units = 'in', res = 600)
grid::grid.draw(fig_profiles)
dev.off()
svg('../figures/fig_profiles.svg',  width = 18/2.54, height = 18/2.54)
grid::grid.draw(fig_profiles)
dev.off()
pdf('../figures/fig_profiles.pdf',   width = 17/2.54, height = 12/2.54)
grid::grid.draw(fig_profiles)
dev.off()
png('../figures/fig_profiles.png',  width = 18/2.54, height = 12/2.54, units = 'in', res = 600)
grid::grid.draw(fig_profiles)
dev.off()
svg('../figures/fig_profiles.svg',  width = 18/2.54, height = 12/2.54)
grid::grid.draw(fig_profiles)
dev.off()
