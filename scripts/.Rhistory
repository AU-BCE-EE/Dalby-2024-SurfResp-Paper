xa_fresh = c(default = 0.0628),
xa_init = c(all = 0.0628),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1.17071975112963, sr1 = 0.4682879),
qhat_opt = c(m0 = 0.4742862, m1 = 1.138287, m2 = 1.770668 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 2.529526),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
ki_H2S_slope = c(default = -0.10623, sr1 = -0.1495),
ki_H2S_int = c(default = 0.93066, sr1 = 1.2938),
ki_H2S_min = c(default = 0.08))
mic_pars1.0 <- list(ks_SO4 = 0.00694,
km_urea = 0.913,
alpha_opt = c(urea = 60, VSd = 0.04954023),
alpha_T_min = c(urea = 0, VSd = 0),
alpha_T_opt = c(urea = 50, VSd = 50),
alpha_T_max = c(urea = 60, VSd = 60))
man_pars1.0 <- list(conc_fresh = list(sulfide = 0.01, urea = 3.17, sulfate = 0.2, TAN = 0.0, starch = 0,
VFA = 2, xa_dead = 0, Cfat = 0, CP = 0, RFd = 0, iNDF = 0, VSd = 75,
VSd_A = 55, VSnd_A = 22, ash = 15), pH = 7, dens = 1000)
save(grp_pars1.0, file = '../data/grp_pars1.0.rda')
save(mic_pars1.0, file = '../data/mic_pars1.0.rda')
save(man_pars1.0, file = '../data/man_pars1.0.rda')
# make data.frame for outside temperature
outside_slurry_temp <-
data.frame(time = c(0, 15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350, 365),
temp_C = c(6.121, 7.783, 11.9, 14.49, 15.73, 16.39, 15.2, 13, 10.47, 7.937, 6.132, 4.648, 4.46, 6.121))
save(outside_slurry_temp, file = '../data/outside_slurry_temp.rda')
# fix this.
out0 <- out0[!duplicated(out0$time), ]
slurry_mass_intp <- approx(out0$time, out0$slurry_mass_eff, xout = out0$time)$y
slurry_mass_cum <- cumsum(slurry_mass_intp)
slurry_mass_dat <- data.frame(time = out0$time, slurry_mass = slurry_mass_cum)
slurry_mass_dat
VSd_fresh <- mean(out0$VSd_eff_conc, na.rm = T)
VSd_fresh
temp_dat <- outside_slurry_temp
temp_dat
plot(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, ylab = 'Slurry_mass (kg)',
xlab = 'Time (days from 1. Apr)')
plot(temp_dat$time, temp_dat$temp_C, ylab = 'Temperature (deg C)', xlab = 'Time (days from 1. Apr)')
out1 <- abm(365, man_pars = man_pars1.0, grp_pars = grp_pars1.0, add_pars = list(storage_depth = 4, area = 1000, floor_area = 0, slurry_mass = slurry_mass_dat, temp_C = temp_dat, conc_fresh.VSd = VSd_fresh, conc_fresh.urea = 0))
plot(CH4_emis_rate ~ time, data = out1, type = 'l', xlab = 'Time (d)', ylab = 'CH4 emission rate (g/d)')
plot(CH4_emis_cum ~ time, data = out1, type = 'l', xlab = 'Time (d)', ylab = 'CH4 cumulative emission (g)')
plot(VFA_conc ~ time, data = out1, type = 'l', xlab = 'Time (d)', ylab = 'VFA conc. (g/kg)')
out1a <- abm(3*365, man_pars = man_pars1.0, grp_pars = grp_pars1.0, add_pars = list(storage_depth = 4, area = 1000, floor_area = 0, slurry_mass = slurry_mass_dat, temp_C = temp_dat, conc_fresh.VSd = VSd_fresh, conc_fresh.urea = 0), startup = 2, value = 'summ')
out1a
out1b <- abm(3*365, man_pars = man_pars1.0, grp_pars = grp_pars1.0, add_pars = list(storage_depth = 4, area = 1000, floor_area = 0, slurry_mass = slurry_mass_dat, temp_C = temp_dat, conc_fresh.VSd = VSd_fresh, conc_fresh.urea = 0, pH = 5.5), startup = 2, value = 'summ')
out1b
out1b <- abm(3*365, man_pars = man_pars1.0, grp_pars = grp_pars1.0, add_pars = list(storage_depth = 4, area = 1000, floor_area = 0, slurry_mass = slurry_mass_dat, temp_C = temp_dat, conc_fresh.VSd = VSd_fresh, conc_fresh.urea = 0, pH = 5.5), startup = 2, value = 'summ')
out1b
?abm
args(abm)
args(abm)
args(abm)
grp_pars2.0
man_pars = list(conc_fresh = list(sulfide = 0.01, urea = 2.4, sulfate = 0.2, TAN = 0.0, starch = 1,
VFA = 2.83, xa_dead = 0, Cfat = 12, CP = 20, RFd = 29, iNDF = 10, VSd = 0,
VSd_A = 44.4, VSnd_A = 20, ash = 15), pH = 7, dens = 1000)
out2a <- abm(365, man_pars = man_pars)
out2b <- abm(365, man_pars = man_pars, add_pars = list(conc_fresh.VFA = 10))
plot(VFA_conc ~ time, data = out2a, type = 'l', xlab = 'Time (d)', ylab = 'VFA conc. (g/kg)', ylim = c(0,10))
lines(out2b$time, out2b$VFA_conc, col = "red")
man_pars = list(conc_fresh = list(sulfide = 0.01, urea = 2.4, sulfate = 0.2, TAN = 0.0, starch = 1,
VFA = 2.83, xa_dead = 0, Cfat = 12, CP = 20, RFd = 29, iNDF = 10, VSd = 0,
VSd_A = 44.4, VSnd_A = 20, ash = 15), pH = 7, dens = 1000)
out2a <- abm(365, man_pars = man_pars)
out2b <- abm(365, man_pars = man_pars, add_pars = list(conc_fresh.VFA = 10))
plot(VFA_conc ~ time, data = out2a, type = 'l', xlab = 'Time (d)', ylab = 'VFA conc. (g/kg)', ylim = c(0,20))
lines(out2b$time, out2b$VFA_conc, col = "red")
out2c <- abm(365, man_pars = man_pars, add_pars = list(slurry_prod_rate = 10000))
plot(CH4_emis_rate ~ time, data = out2a, type = 'l', xlab = 'Time (d)', ylab = 'CH4 emis rate (g/day)', ylim = c(0,20000))
lines(out2c$time, out2c$CH4_emis_rate, col = "red")
out2c <- abm(365, man_pars = man_pars, add_pars = list(slurry_prod_rate = 8000))
plot(CH4_emis_rate ~ time, data = out2a, type = 'l', xlab = 'Time (d)', ylab = 'CH4 emis rate (g/day)', ylim = c(0,20000))
lines(out2c$time, out2c$CH4_emis_rate, col = "red")
man_pars = list(conc_fresh = data.frame(time = c(0, 100, 101, 365), sulfide = c(0.01, 0.01, 0.1, 0.1), urea = 0,
sulfate = 0.2, TAN = c(0, 3, 5, 6), starch = 1,
VFA = c(2.83, 2.83, 10, 10),
xa_dead = 0, Cfat = 12, CP = 20, RFd = 29, iNDF = 10, VSd = 0,
VSd_A = 44.4, VSnd_A = 20, ash = 15), pH = 7, dens = 1000)
out2d <- abm(365, man_pars = man_pars)
plot(CH4_emis_rate ~ time, data = out2a, type = 'l', xlab = 'Time (d)', ylab = 'CH4 emis rate (g/day)', ylim = c(0,20000))
lines(out2d$time, out2d$CH4_emis_rate, col = "red")
plot(VFA_conc ~ time, data = out2a, type = 'l', xlab = 'Time (d)', ylab = 'VFA conc. (g/kg)', ylim = c(0,12))
lines(out2d$time, out2d$VFA_conc, col = "red")
plot(H2S_inhib_m0 ~ time, data = out2a, type = 'l', xlab = 'Time (d)', ylab = 'inhibition', ylim = c(0,1))
lines(out2d$time, out2d$H2S_inhib_m0, col = "red")
lines(out2d$time, out2d$cum_inhib_m0, col = "red", lty = 2)
xa_fresh <- data.frame(time = c(0, 100, 101, 365), m0 = c(2, 0.0628, 0.0628, 0.0628), m1 = c(0.0628, 1, 2, 0.01), m2 = c(0.0628, 0.01, 0.01, 0.1), sr1 = c(0.0628, 1, 2, 0.01))
out2e <- abm(365, man_pars = man_pars, add_pars = list(xa_fresh = xa_fresh))
plot(CH4_emis_rate ~ time, data = out2a, type = 'l', xlab = 'Time (d)', ylab = 'CH4 emis rate (g/day)', ylim = c(0,10))
lines(out2e$time, out2e$CH4_emis_rate, col = "red")
matplot(out2e$time, out2e[, nn <- c('m0_conc','m1_conc','m2_conc','sr1_conc')]/1000,
type = 'l', lty = c(1:length(nn)), col = line_colors, xlab = 'Time (d)', ylab = 'Microbial biomass (gCOD/kg)')
legend("topright", legend = nn, lty = c(1:length(nn)), col = line_colors, lwd = 1,
title = "Microbial biomass", cex = 0.8)
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
library('ABM')
out <- abm(365)
mean(out$CH4_emis_rate,na.rm = T)
mean(out$CH4_emis_rate,na.rm = T)/1000
out <- abm(365, add_pars = list(temp_C = 18.6))
mean(out$CH4_emis_rate,na.rm = T)/1000
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
library(abm)
library(ABM)
abm()
out <- abm()
plot(CP_eff_conc)
plot(out$CP_eff_conc)
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
remove.packages('ABM')
#knitr::opts_chunk$set(fig.width=6, fig.height=4)
#options(width = 85)
install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
library(ABM)
out0 <- abm(days = 365, man_pars = man_pars1.0, grp_pars = grp_pars1.0)
line_colors <- c('red', 'blue', 'green','orange')
matplot(out0$time, out0[, nn <- c('m0','m1','m2','sr1')]/1000,
type = 'l', lty = c(1:length(nn)), col = line_colors, xlab = 'Time (d)',
ylab = 'Microbial biomass (kg)')
legend("topright", legend = nn, lty = c(1:length(nn)), col = line_colors, lwd = 1,
title = "Microbial biomass", cex = 0.8)
matplot(out0$time, out0[, nn <- c('CH4_emis_rate', 'CO2_emis_rate', 'NH3_emis_rate')]/1000,
type = 'l', lty = c(1:length(nn)), col = line_colors, xlab = 'Time (d)',
ylab = 'Emission rate (kg/day)')
legend("topright", legend = nn, lty = c(1:length(nn)), col = line_colors, lwd = 1,
title = "Emission rates", cex = 0.8)
pigs <- 1000
CH4_kg_pr_pig_pr_year <- max(out0$CH4_emis_cum)/1000/pigs
CH4_kg_pr_pig_pr_year
CO2_kg_pr_pig_pr_year <- max(out0$CO2_emis_cum)/1000/pigs
CO2_kg_pr_pig_pr_year
NH3_kg_pr_pig_pr_year <- max(out0$NH3_emis_cum)/1000/out0$area[1]
NH3_kg_pr_pig_pr_year
C_ratio <- (CH4_kg_pr_pig_pr_year * 12/16) / (CO2_kg_pr_pig_pr_year * 12/44 + CH4_kg_pr_pig_pr_year * 12/16)
C_ratio
out0e <- abm(days = 365, man_pars = man_pars1.0, grp_pars = grp_pars1.0, value = 'eff')
out0e
View(out0e)
slurry_mass_dat <- data.frame(time = out0e$time, slurry_mass = out0e$slurry_mass_eff_cum)
slurry_mass_dat
VSd_fresh <- mean(out0e$VSd_eff_conc)
VSd_fresh
temp_dat <- outside_slurry_temp
temp_dat
# Creates parameter objects
# best fit grp_pars2.0 based on multiple datasets using CP, RFd, starch and Cfat as inputs
grp_pars2.0 <- list(grps = c('m0', 'm1', 'm2','sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = c(default = 0.0628),
xa_init = c(all = 0.0628),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1.153337, sr1 = 0.461335),
qhat_opt = c(m0 = 0.5515672, m1 = 0.5883362, m2 = 1.5692192, m3 = 7.2, m4 = 8, m5 = 8, sr1 = 8),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 8.1928624, m2 = 8.1928624, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
ki_H2S_slope = c(default = -0.10623, sr1 = -0.1495),
ki_H2S_int = c(default = 0.93066, sr1 = 1.2938),
ki_H2S_min = c(default = 0.08))
mic_pars2.0 <- list(ks_SO4 = 0.00694,
km_urea = 0.913,
alpha_opt = c(urea = 60, VSd = 0.04954023),
alpha_T_min = c(urea = 0, VSd = 0),
alpha_T_opt = c(urea = 50, VSd = 50),
alpha_T_max = c(urea = 60, VSd = 60))
man_pars2.0 <- list(conc_fresh = list(sulfide = 0.01, urea = 3.17, sulfate = 0.2, TAN = 0.0, starch = 5.25,
VFA = 1.7, xa_dead = 0, Cfat = 27.6, CP = 21.1, RFd = 25.4, iNDF = 11.3, VSd = 0,
VSd_A = 55, VSnd_A = 23.5, ash = 15), pH = 7, dens = 1000)
wthr_pars2.0 <- list(temp_air_C = 20, RH = 90, rain = 1.9, pres_kpa = 101, rs = 10)
chem_pars2.0 <- list(COD_conv = c(CH4 = 1/0.2507, xa_dead = 1/0.73, RFd = 1/0.8444792, iNDF = 1/0.8444792, starch = 1/0.8444792,
Cfat = 1/0.3117844, CP = 1/0.6541602, VFA = 1/0.9383125, S = 1/0.5015, VS = 1/0.69, CO2_aer = 1/0.436, CO2_sr = 1/1.2, CO2_ureo = 1/1.57,
N_CP = 1/0.1014, C_xa_dead = 1/0.358, C_RFd = 1/0.376, C_iNDF = 1/0.358,
C_starch = 1/0.377, C_Cfat = 1/0.265, C_CP = 1/0.359 , C_VFA = 1/0.374, C_VSd = 1/0.344, C_N_urea = 1/0.429),
kl = c(NH3 = 54, NH3_floor = 23, H2S = 0.02))
arrh_pars2.0 <- list(lnA = c(VSd_A = 31.3),
E_CH4 = c(VSd_A = 81000),
A = c(xa_dead= 8.56*10^7, starch = 5.86*10^18, Cfat = 0, CP = 181.8, RFd = 1.499476 * 10^12),
E = c(xa_dead= 60600, starch = 109400, Cfat = 0, CP = 23890, RFd = 81052),
R = 8.314,
VS_CH4 = 6.67)
save(grp_pars2.0, file = '../data/grp_pars2.0.rda')
save(mic_pars2.0, file = '../data/mic_pars2.0.rda')
save(man_pars2.0, file = '../data/man_pars2.0.rda')
save(wthr_pars2.0, file = '../data/wthr_pars2.0.rda')
save(chem_pars2.0, file = '../data/chem_pars2.0.rda')
save(arrh_pars2.0, file = '../data/arrh_pars2.0.rda')
# best fit grp_pars for Dalby et al. 2023, EST using VSd as input
grp_pars1.0 <- list(grps = c('m0','m1','m2', 'sr1'),
yield = c(default = 0.05, sr1 = 0.065),
xa_fresh = c(default = 0.0628),
xa_init = c(all = 0.0628),
decay_rate = c(all = 0.02),
ks_coefficient = c(default = 1.17071975112963, sr1 = 0.4682879),
qhat_opt = c(m0 = 0.4742862, m1 = 1.138287, m2 = 1.770668 , m3 = 7.2, m4 = 8, m5 = 8, sr1 = 2.529526),
T_opt = c(m0 = 18, m1 = 18, m2 = 28, m3 = 36, m4 = 43.75, m5 = 55, sr1 = 43.75),
T_min = c(m0 = 0, m1 = 10, m2 = 10, m3 = 15, m4 = 26.25, m5 = 30, sr1 = 0),
T_max = c(m0 = 25, m1 = 25, m2 = 38, m3 = 45, m4 = 51.25, m5 = 60, sr1 = 51.25),
ki_NH3_min = c(all = 0.015),
ki_NH3_max = c(all = 0.13),
ki_NH4_min = c(all = 2.7),
ki_NH4_max = c(all = 4.8),
ki_H2S_slope = c(default = -0.10623, sr1 = -0.1495),
ki_H2S_int = c(default = 0.93066, sr1 = 1.2938),
ki_H2S_min = c(default = 0.08))
mic_pars1.0 <- list(ks_SO4 = 0.00694,
km_urea = 0.913,
alpha_opt = c(urea = 60, VSd = 0.04954023),
alpha_T_min = c(urea = 0, VSd = 0),
alpha_T_opt = c(urea = 50, VSd = 50),
alpha_T_max = c(urea = 60, VSd = 60))
man_pars1.0 <- list(conc_fresh = list(sulfide = 0.01, urea = 3.17, sulfate = 0.2, TAN = 0.0, starch = 0,
VFA = 2, xa_dead = 0, Cfat = 0, CP = 0, RFd = 0, iNDF = 0, VSd = 75,
VSd_A = 55, VSnd_A = 22, ash = 15), pH = 7, dens = 1000)
save(grp_pars1.0, file = '../data/grp_pars1.0.rda')
save(mic_pars1.0, file = '../data/mic_pars1.0.rda')
save(man_pars1.0, file = '../data/man_pars1.0.rda')
# make data.frame for outside temperature
outside_slurry_temp <-
data.frame(time = c(0, 15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350, 365),
temp_C = c(7.0345, 6.132, 4.648, 4.46, 7.783, 11.9, 14.49, 15.73, 16.39, 15.2, 13, 10.47, 7.937, 7.0345))
save(outside_slurry_temp, file = '../data/outside_slurry_temp.rda')
plot(slurry_mass_dat$time, slurry_mass_dat$slurry_mass, ylab = 'Slurry_mass (kg)',
xlab = 'Time (days from 1. Jan)')
plot(temp_dat$time, temp_dat$temp_C, ylab = 'Temperature (deg C)',
xlab = 'Time (days from 1. Jan)')
out1 <- abm(365, man_pars = man_pars1.0, grp_pars = grp_pars1.0,
add_pars = list(storage_depth = 4, area = 1000, floor_area = 0,
slurry_mass = slurry_mass_dat, temp_C = temp_dat,
conc_fresh.VSd = VSd_fresh, conc_fresh.urea = 0,
wash_water = NA))
remove.pacakges('ABM')
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
temperatures
library(ABM)
temperatures
data(temperatures)
data(temperature)
?temperatures
library(ABM)
?abm
?temperatures
remove.pacakges(ABM)
remove.packages(ABM)
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE, FORCE = TRUE)
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
library('ABM')
data(temperatures)
data(temperatures)
?temperatures
data(temperatures)
data(outside_slurry_temp_vechi)
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
---
title: "Getting Started with the ABM Package in R"
#knitr::opts_chunk$set(fig.width=6, fig.height=4)
#options(width = 85)
#install.packages('devtools')
#devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
library(ABM)
#install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/ABM/vignettes")
#install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
#install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
install.packages('ABM')
library('ABM')
abm(365)
library(ABM)
library('ABM')
args(abm)
library('ABM')
remove.packages('ABM')
install.packages('ABM')
library('ABM')
abm(365)
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
rm(list=ls())
library(ABM)
library(dplyr)
library(tidyr)
library(ggplot2)
source('../R/slurry_app.R')
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/AU-BCE-EE/Dalby-2024-SurfResp-Paper/scripts")
rm(list=ls())
library(ABM)
library(dplyr)
library(tidyr)
library(ggplot2)
source('../R/slurry_app.R')
source('../R/doy.R')
# barn inputs:
wthr_pars_barn = list(temp_air_C = 20, RH = 90, rain = 0, pres_kpa = 101, rs = 10)
evap_pars_barn = list(evap = 0.5 * ABM:::et(temp_C = wthr_pars_barn$temp_air_C, pres_kpa = wthr_pars_barn$pres_kpa, rs = wthr_pars_barn$rs))
mng_pars_barn = list(slurry_prod_rate = 2000 * 5.7,
slurry_mass = 0,
storage_depth = 0.6,
resid_depth = 0.05,
floor_area = 1300,
area = 1430,
empty_int = 28,
temp_C = 18.6,
wash_water = 75 * 2000,
wash_int = 84,
rest_d = 5,
RH = 90,
cover = NA,
resid_enrich = 0.9,
slopes = c(urea = NA, slurry_prod_rate = NA),
graze = c(start = 'May', duration = 0, hours_day = 0),
scale = c(ks_coefficient = 1, qhat_opt = 1, xa_fresh = 1, yield = 1))
man_pars_barn = list(conc_fresh = list(sulfide = 0.01, urea = 3.45, sulfate = 0.2, TAN = 0, starch = 5.25,
VFA = 1.71, xa_aer = 0, xa_bac = 0, xa_dead = 0, Cfat = 27.58, CP = 21.13, RFd = 25.43, iNDF = 11.31,
VSd = 0, VSd_A = 54.78, VSnd_A = 23.48, ash = 15), pH = 7, dens = 1000)
days <- 3*365
# call abm for barn simulation
barn_dat <- cbind(abm(days, 1, wthr_pars = wthr_pars_barn, evap_pars = evap_pars_barn,
mng_pars = mng_pars_barn, man_pars = man_pars_barn), source = 'barn')
# storage inputs
wthr_pars_storage = list(temp_air_C = 15, RH = 90, rain = 0, pres_kpa = 101, rs = 10)
evap_pars_storage = list(evap = 0.5 * ABM:::et(temp_C = wthr_pars_storage$temp_air_C, pres_kpa = wthr_pars_storage$pres_kpa, rs = wthr_pars_storage$rs))
# get fresh concentrations as the effluent from the barn (averages)
conc_fresh <- barn_dat[barn_dat$slurry_mass_eff != 0, grepl('eff_conc', names(barn_dat))] %>%
summarise(across(everything(), mean)) %>% rename_with(~gsub('_eff_conc', '', .), everything())
xa_fresh <- barn_dat[barn_dat$slurry_mass_eff != 0, grepl('eff_conc', names(barn_dat))] %>%
select(starts_with('xa') & -contains('dead')) %>%
summarise(across(everything(), mean)) %>% rename_with(~gsub('_eff_conc', '', .), everything()) %>%
rename_with(~gsub('xa_', '', .), everything())
conc_fresh_storage  <- as.list(conc_fresh[names(man_pars_barn$conc_fresh)])
xa_fresh_storage <- setNames(as.numeric(xa_fresh), names(xa_fresh))
# get slurry mass effluents from barn
slurry_cum <- cumsum(barn_dat$slurry_mass_eff[!duplicated(barn_dat$time)])
time <- seq(from = 0, to = max(barn_dat$time), 1)
slurry_mass_dat <- data.frame(time = time, slurry_mass = slurry_cum)
# slurry application pattern
specs <- data.frame(app_t1s = "March", app_t2s = "April", app_t3s = "May", app_t4s = "June",
app_t5s = "July", app_t6s = "August", app_t7s = "September",
app1s = 0.3, app2s = 0.89, app3s = 0.65, app4s = 0.07,
app5s = 0.05, app6s = 0.11, app7s = 0.12)
# adjust for slurry application
slurry_mass_dat <- slurry_app(days = days, begin = 'January', specs = specs, from = 'storage', slurry = slurry_mass_dat)
# get temp dat from Vechi 2023
temp_dat <- data.frame(time = c(outside_slurry_temp_vechi$time, outside_slurry_temp_vechi$time+365,
outside_slurry_temp_vechi$time + 365+365), temp_C = rep(outside_slurry_temp_vechi$temp_C, 3))
temp_dat <- temp_dat[!duplicated(temp_dat),]
# combine inputs for storage
mng_pars_storage = list(slurry_prod_rate = 0,
slurry_mass = slurry_mass_dat,
storage_depth = 4.6,
resid_depth = 0,
floor_area = 0,
area = 1000,
empty_int = 28,
temp_C = temp_dat,
wash_water = NA,
wash_int = 84,
rest_d = 5,
RH = 90,
cover = 'tent',
resid_enrich = 0.9,
slopes = c(urea = NA, slurry_prod_rate = NA),
graze = c(start = 'May', duration = 0, hours_day = 0),
scale = c(ks_coefficient = 1, qhat_opt = 1, xa_fresh = 1, yield = 1))
man_pars_storage = list(conc_fresh = conc_fresh_storage, pH = 7.3, dens = 1000)
storage_dat <- cbind(abm(days, 1, mng_pars = mng_pars_storage, man_pars = man_pars_storage,
add_pars = list(xa_fresh = xa_fresh_storage)), source = 'storage')
# prepare for figure 5
# remove slurry rem peaks
rem_times <- storage_dat$time[storage_dat$CH4_emis_rate>1.5e05]
dat <- bind_rows(barn_dat, storage_dat) %>% filter(!time %in% rem_times)
dat$n_anim = 2000
dat$mol.CH4 <- dat$CH4_emis_rate * 12.01/16.04
dat$mol.CO2 <- dat$CO2_emis_rate * 12.01/44.01
dat$mol.ratio <- dat$mol.CH4/(dat$mol.CH4 + dat$mol.CO2)
dat.plot_CO2 <- dat %>% filter(time > 2*365) %>% mutate(time = time - 2*365,
CH4_emis_rate = CH4_emis_rate * 12/16/n_anim,
CO2_emis_rate = CO2_emis_rate * 12/44/n_anim,
respiration = respiration * 0.436 * 12/44/n_anim,
ureolysis = rut_urea * 1.57*12/44/n_anim,
fermentation = CO2_ferm_CO2*12/44/n_anim,
methanogenesis = (CO2_ferm_meth_sr_CO2 - CO2_ferm_CO2)*12/44/n_anim,
slurry_mass = slurry_mass / 1000
) %>%
pivot_longer(c('CO2_emis_rate', 'respiration', 'ureolysis', 'fermentation', 'methanogenesis','CH4_emis_rate', 'mol.ratio', 'temp_C', 'slurry_mass'), names_to = "comp", values_to = "value")
source.lab <- as_labeller(c(barn = "Barn", storage = "Storage",
"1" = "CO[2]~(g~C~pig^{-1}~d^{-1})",
"2" = "CH[4]~(g~C~pig^{-1}~d^{-1})",
"3" = "C[CH4]/(C[CH4]+C[CO2])",
"4" = "Temperature~(degree*C)",
"5" = 'Slurry~volume~(m^{3})'), label_parsed)
custom_colors <- c(
"CO2_emis_rate" = "gray",
"respiration" = "red",
"ureolysis" = "palegreen4",
"fermentation" = "purple",
"methanogenesis" = "orange"
)
custom_labels <- c(
"CO2_emis_rate" = expression(paste("CO"[2], " total")),
"respiration" = expression(paste("CO"[2], " respiration")),
"ureolysis" = expression(paste("CO"[2], " ureolysis")),
"fermentation" = expression(paste("CO"[2], " fermentation")),
"methanogenesis" = expression(paste("CO"[2], " ", methanogenesis + sulfate~reduction))
)
dat.plot_CO2$plot <- 1
dat.plot_CO2$plot[dat.plot_CO2$comp == "CH4_emis_rate"] <- 2
dat.plot_CO2$plot[dat.plot_CO2$comp == "mol.ratio"] <- 3
dat.plot_CO2$plot[dat.plot_CO2$comp == "temp_C"] <- 4
dat.plot_CO2$plot[dat.plot_CO2$comp == "slurry_mass"] <- 5
dat.plot_CO2$plot <- as.factor(dat.plot_CO2$plot)
# Plot
CO2_plot_full <- ggplot(dat.plot_CO2, aes(x = time, y = value, col = comp)) +
geom_line(size = 1) +
theme_bw() +
theme(text = element_text(size = 11), axis.text.x = element_text(angle = 60, hjust = 1),
legend.text.align = 0, legend.position = "top" ) +
scale_x_continuous(
breaks = c(1, 32, 61, 92, 122, 153, 183, 214, 245, 275, 306, 336),
labels = month.abb[c(3:12, 1, 2)]
) +
labs(y = "", x = "", col = "") +
facet_grid(plot~source, labeller = source.lab, scales = "free_y") +
scale_color_manual(
values = custom_colors,
labels = custom_labels
) +
guides(col=guide_legend(nrow=2, byrow=TRUE))
png('../figures/fig_storage_sim.png',  width = 15/2.54, height = 20/2.54, units = 'in', res = 600)
grid::grid.draw(CO2_plot_full)
dev.off()
dat.plot_red <- dat.plot_CO2[dat.plot_CO2$plot %in% c(1,2,3),]
CO2_plot_paper <- ggplot(dat.plot_red, aes(x = time, y = value, col = comp)) +
geom_line(size = 1) +
theme_bw() +
theme(text = element_text(size = 11), axis.text.x = element_text(angle = 60, hjust = 1),
legend.text.align = 0, legend.position = "top" ) +
scale_x_continuous(
breaks = c(1, 32, 61, 92, 122, 153, 183, 214, 245, 275, 306, 336),
labels = month.abb[c(3:12, 1, 2)]
) +
labs(y = "", x = "", col = "") +
facet_grid(plot~source, labeller = source.lab, scales = "free_y") +
scale_color_manual(
values = custom_colors,
labels = custom_labels
) +
guides(col=guide_legend(nrow=2, byrow=TRUE))
png('../figures/fig_storage_sim_paper.png',  width = 6, height = 6, units = 'in', res = 600)
grid::grid.draw(CO2_plot_paper)
dev.off()
pdf('../figures/fig_storage_sim.pdf',  width = 15/2.54, height = 18/2.54)
grid::grid.draw(CO2_plot_paper)
dev.off()
dat.stat <- dat %>% filter(time > 2*365) %>% mutate(time = time - 2*365) %>%
group_by(source) %>%
summarise(avg_ratio = mean(mol.ratio, na.rm = T), cum_ratio = sum(mol.CH4, na.rm = T)/(sum(mol.CH4, na.rm = T) + sum(mol.CO2, na.rm = T)),
CH4_kg_m3_year = mean(CH4_emis_rate/1000, na.rm = T)/mean(slurry_mass/1000, na.rm = T)*365,
CH4_A_kg_m3_year = mean(CH4_A_emis_rate/1000, na.rm = T)/mean(slurry_mass/1000, na.rm = T)*365,
CH4_g_pig_day = mean(CH4_emis_rate, na.rm = T)/mean(n_anim),
CH4_kg_m3_excreted = mean(CH4_emis_rate/1000, na.rm = T)/mean((n_anim * 0.47 * 365 / 89 / 1000)),
CO2_kg_m3_year = mean(CO2_emis_rate/1000, na.rm = T)/mean(slurry_mass/1000, na.rm = T)*365,
CO2_kg_m2_year = mean(CO2_emis_rate/1000, na.rm = T)/area[1] * 365,
C_loss_resp = mean(respiration * 0.436 * 12.01/44.01/1000, na.rm = T)/(mean(CO2_emis_rate * 12.01/44.01/1000, na.rm = T) + mean(CH4_emis_rate* 12.01/16.04/1000, na.rm = T)),
C_loss_urea = mean(rut_urea * 1.57 * 12.01/44.01/1000, na.rm = T)/(mean(CO2_emis_rate * 12.01/44.01/1000, na.rm = T) + mean(CH4_emis_rate* 12.01/16.04/1000, na.rm = T)))
write.csv(dat.stat, '../output/storage_sim_stat.csv', row.names = F)
grid::grid.draw(CO2_plot_paper)
dat.stat
dat$CO2_resp
dat$CO2_ferm_meth_sr_CO2
dat$CO2_emis_rate
plot(dat$CO2_emis_rate, dat$CO2_resp + dat$CO2_ferm_meth_sr_CO2 + dat$rut_urea * 1.57)
plot(dat$CO2_emis_rate, dat$CO2_resp + dat$CO2_ferm_meth_sr_CO2 + dat$rut_urea * 1.57)
lm(CO2_emis_rate~(CO2_resp + CO2_ferm_meth_sr_CO2 + rut_urea * 1.57), dat)
dat$joined_CO2 <- dat$CO2_resp + dat$CO2_ferm_meth_sr_CO2 + dat$rut_urea * 1.57
lm(CO2_emis_rate~CO2_joined, dat)
lm(CO2_emis_rate~joined_CO2, dat)
plot(dat$time, dat$CO2_ferm_meth_sr_CO2)
